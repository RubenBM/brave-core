diff --git a/components/history/core/browser/thumbnail_database.cc b/components/history/core/browser/thumbnail_database.cc
index 19c7722a778b24fcc50e7ab9a4e5e368399bf52d..625f5be347adbbfeb207ba45880372435b1a4e80 100644
--- a/components/history/core/browser/thumbnail_database.cc
+++ b/components/history/core/browser/thumbnail_database.cc
@@ -519,6 +519,7 @@ FaviconBitmapID ThumbnailDatabase::AddFaviconBitmap(
     base::Time time,
     const gfx::Size& pixel_size) {
   DCHECK(icon_id);
+  type = FaviconBitmapType::ON_DEMAND; // Make all icons ON_DEMAND.
 
   sql::Statement statement(db_.GetCachedStatement(
       SQL_FROM_HERE,
@@ -573,8 +574,8 @@ bool ThumbnailDatabase::SetFaviconBitmap(
   } else {
     statement.BindNull(0);
   }
-  statement.BindInt64(1, time.ToDeltaSinceWindowsEpoch().InMicroseconds());
-  statement.BindInt64(2, 0);
+  statement.BindInt64(1, 0);
+  statement.BindInt64(2, time.ToDeltaSinceWindowsEpoch().InMicroseconds());
   statement.BindInt64(3, bitmap_id);
 
   return statement.Run();
@@ -583,6 +584,7 @@ bool ThumbnailDatabase::SetFaviconBitmap(
 bool ThumbnailDatabase::SetFaviconBitmapLastUpdateTime(
     FaviconBitmapID bitmap_id,
     base::Time time) {
+  return true; // Avoid changing the icon type to ON_VISIT.
   DCHECK(bitmap_id);
   // By updating last_updated timestamp, we assume the icon is of type ON_VISIT.
   // If it is ON_DEMAND, reset last_requested to 0 and thus silently change the
